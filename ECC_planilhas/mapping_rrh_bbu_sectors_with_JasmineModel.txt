
INICIO HORA 1.0

	INICIO ALLOCATION 1.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;
	uint32_t connect_RRH_45 = 0;
	uint32_t connect_RRH_46 = 0;
	uint32_t connect_RRH_47 = 0;
	uint32_t connect_RRH_48 = 0;
	uint32_t connect_RRH_49 = 0;
	uint32_t connect_RRH_50 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 45:
				connect_RRH_45++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 46:
				connect_RRH_46++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 47:
				connect_RRH_47++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 48:
				connect_RRH_48++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 49:
				connect_RRH_49++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 50:
				connect_RRH_50++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 51:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 52:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 53:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 54:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;
	std::cout <<"RRH 45: " << connect_RRH_45 << " usuários" << std::endl;
	std::cout <<"RRH 46: " << connect_RRH_46 << " usuários" << std::endl;
	std::cout <<"RRH 47: " << connect_RRH_47 << " usuários" << std::endl;
	std::cout <<"RRH 48: " << connect_RRH_48 << " usuários" << std::endl;
	std::cout <<"RRH 49: " << connect_RRH_49 << " usuários" << std::endl;
	std::cout <<"RRH 50: " << connect_RRH_50 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 1.0

	INICIO UPDATE 1.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 49:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 50:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 1.0

FIM HORA 1.0

INICIO HORA 2.0

	INICIO ALLOCATION 2.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 2.0

	INICIO UPDATE 2.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 2.0

FIM HORA 2.0

INICIO HORA 3.0

	INICIO ALLOCATION 3.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 3.0

	INICIO UPDATE 3.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 3.0

FIM HORA 3.0

INICIO HORA 4.0

	INICIO ALLOCATION 4.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 4.0

	INICIO UPDATE 4.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 4.0

FIM HORA 4.0

INICIO HORA 5.0

	INICIO ALLOCATION 5.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 5.0

	INICIO UPDATE 5.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 5.0

FIM HORA 5.0

INICIO HORA 6.0

	INICIO ALLOCATION 6.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 6.0

	INICIO UPDATE 6.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 6.0

FIM HORA 6.0

INICIO HORA 7.0

	INICIO ALLOCATION 7.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 7.0

	INICIO UPDATE 7.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 7.0

FIM HORA 7.0

INICIO HORA 8.0

	INICIO ALLOCATION 8.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 8.0

	INICIO UPDATE 8.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 8.0

FIM HORA 8.0

INICIO HORA 9.0

	INICIO ALLOCATION 9.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 9.0

	INICIO UPDATE 9.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 9.0

FIM HORA 9.0

INICIO HORA 10.0

	INICIO ALLOCATION 10.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 10.0

	INICIO UPDATE 10.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 10.0

FIM HORA 10.0

INICIO HORA 11.0

	INICIO ALLOCATION 11.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 11.0

	INICIO UPDATE 11.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 11.0

FIM HORA 11.0

INICIO HORA 12.0

	INICIO ALLOCATION 12.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 12.0

	INICIO UPDATE 12.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 12.0

FIM HORA 12.0

INICIO HORA 13.0

	INICIO ALLOCATION 13.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 13.0

	INICIO UPDATE 13.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 13.0

FIM HORA 13.0

INICIO HORA 14.0

	INICIO ALLOCATION 14.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;
	uint32_t connect_RRH_45 = 0;
	uint32_t connect_RRH_46 = 0;
	uint32_t connect_RRH_47 = 0;
	uint32_t connect_RRH_48 = 0;
	uint32_t connect_RRH_49 = 0;
	uint32_t connect_RRH_50 = 0;
	uint32_t connect_RRH_51 = 0;
	uint32_t connect_RRH_52 = 0;
	uint32_t connect_RRH_53 = 0;
	uint32_t connect_RRH_54 = 0;
	uint32_t connect_RRH_55 = 0;
	uint32_t connect_RRH_56 = 0;
	uint32_t connect_RRH_57 = 0;
	uint32_t connect_RRH_58 = 0;
	uint32_t connect_RRH_59 = 0;
	uint32_t connect_RRH_60 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 45:
				connect_RRH_45++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 46:
				connect_RRH_46++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 47:
				connect_RRH_47++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 48:
				connect_RRH_48++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 49:
				connect_RRH_49++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 50:
				connect_RRH_50++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 51:
				connect_RRH_51++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 52:
				connect_RRH_52++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 53:
				connect_RRH_53++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 54:
				connect_RRH_54++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 55:
				connect_RRH_55++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 56:
				connect_RRH_56++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 57:
				connect_RRH_57++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 58:
				connect_RRH_58++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 59:
				connect_RRH_59++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 60:
				connect_RRH_60++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 61:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 62:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 63:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 64:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;
	std::cout <<"RRH 45: " << connect_RRH_45 << " usuários" << std::endl;
	std::cout <<"RRH 46: " << connect_RRH_46 << " usuários" << std::endl;
	std::cout <<"RRH 47: " << connect_RRH_47 << " usuários" << std::endl;
	std::cout <<"RRH 48: " << connect_RRH_48 << " usuários" << std::endl;
	std::cout <<"RRH 49: " << connect_RRH_49 << " usuários" << std::endl;
	std::cout <<"RRH 50: " << connect_RRH_50 << " usuários" << std::endl;
	std::cout <<"RRH 51: " << connect_RRH_51 << " usuários" << std::endl;
	std::cout <<"RRH 52: " << connect_RRH_52 << " usuários" << std::endl;
	std::cout <<"RRH 53: " << connect_RRH_53 << " usuários" << std::endl;
	std::cout <<"RRH 54: " << connect_RRH_54 << " usuários" << std::endl;
	std::cout <<"RRH 55: " << connect_RRH_55 << " usuários" << std::endl;
	std::cout <<"RRH 56: " << connect_RRH_56 << " usuários" << std::endl;
	std::cout <<"RRH 57: " << connect_RRH_57 << " usuários" << std::endl;
	std::cout <<"RRH 58: " << connect_RRH_58 << " usuários" << std::endl;
	std::cout <<"RRH 59: " << connect_RRH_59 << " usuários" << std::endl;
	std::cout <<"RRH 60: " << connect_RRH_60 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 14.0

	INICIO UPDATE 14.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 49:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 50:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 51:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 52:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 53:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 54:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 55:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 56:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 57:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 58:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 59:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 60:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 14.0

FIM HORA 14.0

INICIO HORA 15.0

	INICIO ALLOCATION 15.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;
	uint32_t connect_RRH_45 = 0;
	uint32_t connect_RRH_46 = 0;
	uint32_t connect_RRH_47 = 0;
	uint32_t connect_RRH_48 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 45:
				connect_RRH_45++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 46:
				connect_RRH_46++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 47:
				connect_RRH_47++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 48:
				connect_RRH_48++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 49:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 50:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 51:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 52:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;
	std::cout <<"RRH 45: " << connect_RRH_45 << " usuários" << std::endl;
	std::cout <<"RRH 46: " << connect_RRH_46 << " usuários" << std::endl;
	std::cout <<"RRH 47: " << connect_RRH_47 << " usuários" << std::endl;
	std::cout <<"RRH 48: " << connect_RRH_48 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 15.0

	INICIO UPDATE 15.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 15.0

FIM HORA 15.0

INICIO HORA 16.0

	INICIO ALLOCATION 16.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 16.0

	INICIO UPDATE 16.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 16.0

FIM HORA 16.0

INICIO HORA 17.0

	INICIO ALLOCATION 17.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 17.0

	INICIO UPDATE 17.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 17.0

FIM HORA 17.0

INICIO HORA 18.0

	INICIO ALLOCATION 18.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 18.0

	INICIO UPDATE 18.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 18.0

FIM HORA 18.0

INICIO HORA 19.0

	INICIO ALLOCATION 19.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 19.0

	INICIO UPDATE 19.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 19.0

FIM HORA 19.0

INICIO HORA 20.0

	INICIO ALLOCATION 20.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 20.0

	INICIO UPDATE 20.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 20.0

FIM HORA 20.0

INICIO HORA 21.0

	INICIO ALLOCATION 21.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 21.0

	INICIO UPDATE 21.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 21.0

FIM HORA 21.0

INICIO HORA 22.0

	INICIO ALLOCATION 22.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 22.0

	INICIO UPDATE 22.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 22.0

FIM HORA 22.0

INICIO HORA 23.0

	INICIO ALLOCATION 23.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;
	uint32_t connect_RRH_45 = 0;
	uint32_t connect_RRH_46 = 0;
	uint32_t connect_RRH_47 = 0;
	uint32_t connect_RRH_48 = 0;
	uint32_t connect_RRH_49 = 0;
	uint32_t connect_RRH_50 = 0;
	uint32_t connect_RRH_51 = 0;
	uint32_t connect_RRH_52 = 0;
	uint32_t connect_RRH_53 = 0;
	uint32_t connect_RRH_54 = 0;
	uint32_t connect_RRH_55 = 0;
	uint32_t connect_RRH_56 = 0;
	uint32_t connect_RRH_57 = 0;
	uint32_t connect_RRH_58 = 0;
	uint32_t connect_RRH_59 = 0;
	uint32_t connect_RRH_60 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 45:
				connect_RRH_45++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 46:
				connect_RRH_46++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 47:
				connect_RRH_47++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 48:
				connect_RRH_48++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 49:
				connect_RRH_49++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 50:
				connect_RRH_50++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 51:
				connect_RRH_51++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 52:
				connect_RRH_52++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 53:
				connect_RRH_53++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 54:
				connect_RRH_54++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 55:
				connect_RRH_55++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 56:
				connect_RRH_56++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 57:
				connect_RRH_57++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 58:
				connect_RRH_58++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 59:
				connect_RRH_59++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 60:
				connect_RRH_60++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 61:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 62:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 63:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 64:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;
	std::cout <<"RRH 45: " << connect_RRH_45 << " usuários" << std::endl;
	std::cout <<"RRH 46: " << connect_RRH_46 << " usuários" << std::endl;
	std::cout <<"RRH 47: " << connect_RRH_47 << " usuários" << std::endl;
	std::cout <<"RRH 48: " << connect_RRH_48 << " usuários" << std::endl;
	std::cout <<"RRH 49: " << connect_RRH_49 << " usuários" << std::endl;
	std::cout <<"RRH 50: " << connect_RRH_50 << " usuários" << std::endl;
	std::cout <<"RRH 51: " << connect_RRH_51 << " usuários" << std::endl;
	std::cout <<"RRH 52: " << connect_RRH_52 << " usuários" << std::endl;
	std::cout <<"RRH 53: " << connect_RRH_53 << " usuários" << std::endl;
	std::cout <<"RRH 54: " << connect_RRH_54 << " usuários" << std::endl;
	std::cout <<"RRH 55: " << connect_RRH_55 << " usuários" << std::endl;
	std::cout <<"RRH 56: " << connect_RRH_56 << " usuários" << std::endl;
	std::cout <<"RRH 57: " << connect_RRH_57 << " usuários" << std::endl;
	std::cout <<"RRH 58: " << connect_RRH_58 << " usuários" << std::endl;
	std::cout <<"RRH 59: " << connect_RRH_59 << " usuários" << std::endl;
	std::cout <<"RRH 60: " << connect_RRH_60 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 23.0

	INICIO UPDATE 23.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 49:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 50:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 51:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 52:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 53:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 54:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 55:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 56:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 57:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 58:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 59:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 60:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 23.0

FIM HORA 23.0

INICIO HORA 24.0

	INICIO ALLOCATION 24.0

	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;
	uint32_t connect_RRH_26 = 0;
	uint32_t connect_RRH_27 = 0;
	uint32_t connect_RRH_28 = 0;
	uint32_t connect_RRH_29 = 0;
	uint32_t connect_RRH_30 = 0;
	uint32_t connect_RRH_31 = 0;
	uint32_t connect_RRH_32 = 0;
	uint32_t connect_RRH_33 = 0;
	uint32_t connect_RRH_34 = 0;
	uint32_t connect_RRH_35 = 0;
	uint32_t connect_RRH_36 = 0;
	uint32_t connect_RRH_37 = 0;
	uint32_t connect_RRH_38 = 0;
	uint32_t connect_RRH_39 = 0;
	uint32_t connect_RRH_40 = 0;
	uint32_t connect_RRH_41 = 0;
	uint32_t connect_RRH_42 = 0;
	uint32_t connect_RRH_43 = 0;
	uint32_t connect_RRH_44 = 0;
	uint32_t connect_RRH_45 = 0;
	uint32_t connect_RRH_46 = 0;
	uint32_t connect_RRH_47 = 0;
	uint32_t connect_RRH_48 = 0;
	uint32_t connect_RRH_49 = 0;
	uint32_t connect_RRH_50 = 0;
	uint32_t connect_RRH_51 = 0;
	uint32_t connect_RRH_52 = 0;
	uint32_t connect_RRH_53 = 0;
	uint32_t connect_RRH_54 = 0;
	uint32_t connect_RRH_55 = 0;
	uint32_t connect_RRH_56 = 0;
	uint32_t connect_RRH_57 = 0;
	uint32_t connect_RRH_58 = 0;
	uint32_t connect_RRH_59 = 0;
	uint32_t connect_RRH_60 = 0;
	uint32_t connect_RRH_61 = 0;
	uint32_t connect_RRH_62 = 0;
	uint32_t connect_RRH_63 = 0;
	uint32_t connect_RRH_64 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 26:
				connect_RRH_26++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 27:
				connect_RRH_27++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 28:
				connect_RRH_28++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 29:
				connect_RRH_29++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 30:
				connect_RRH_30++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 31:
				connect_RRH_31++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 32:
				connect_RRH_32++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 33:
				connect_RRH_33++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 34:
				connect_RRH_34++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 35:
				connect_RRH_35++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 36:
				connect_RRH_36++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 37:
				connect_RRH_37++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 38:
				connect_RRH_38++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 39:
				connect_RRH_39++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 40:
				connect_RRH_40++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 41:
				connect_RRH_41++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 42:
				connect_RRH_42++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 43:
				connect_RRH_43++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 44:
				connect_RRH_44++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 45:
				connect_RRH_45++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 46:
				connect_RRH_46++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 47:
				connect_RRH_47++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 48:
				connect_RRH_48++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 49:
				connect_RRH_49++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 50:
				connect_RRH_50++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 51:
				connect_RRH_51++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 52:
				connect_RRH_52++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 53:
				connect_RRH_53++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 54:
				connect_RRH_54++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 55:
				connect_RRH_55++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 56:
				connect_RRH_56++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 57:
				connect_RRH_57++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 58:
				connect_RRH_58++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 59:
				connect_RRH_59++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 60:
				connect_RRH_60++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 61:
				connect_RRH_61++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 62:
				connect_RRH_62++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 63:
				connect_RRH_63++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 64:
				connect_RRH_64++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 65:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 66:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 67:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 68:
				mymap3[m_mymap[it->first]]= 6 ;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários" << std::endl;
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários" << std::endl;
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários" << std::endl;
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários" << std::endl;
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários" << std::endl;
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários" << std::endl;
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários" << std::endl;
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários" << std::endl;
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários" << std::endl;
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários" << std::endl;
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários" << std::endl;
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários" << std::endl;
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários" << std::endl;
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários" << std::endl;
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários" << std::endl;
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários" << std::endl;
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários" << std::endl;
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários" << std::endl;
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários" << std::endl;
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários" << std::endl;
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários" << std::endl;
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários" << std::endl;
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários" << std::endl;
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários" << std::endl;
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários" << std::endl;
	std::cout <<"RRH 26: " << connect_RRH_26 << " usuários" << std::endl;
	std::cout <<"RRH 27: " << connect_RRH_27 << " usuários" << std::endl;
	std::cout <<"RRH 28: " << connect_RRH_28 << " usuários" << std::endl;
	std::cout <<"RRH 29: " << connect_RRH_29 << " usuários" << std::endl;
	std::cout <<"RRH 30: " << connect_RRH_30 << " usuários" << std::endl;
	std::cout <<"RRH 31: " << connect_RRH_31 << " usuários" << std::endl;
	std::cout <<"RRH 32: " << connect_RRH_32 << " usuários" << std::endl;
	std::cout <<"RRH 33: " << connect_RRH_33 << " usuários" << std::endl;
	std::cout <<"RRH 34: " << connect_RRH_34 << " usuários" << std::endl;
	std::cout <<"RRH 35: " << connect_RRH_35 << " usuários" << std::endl;
	std::cout <<"RRH 36: " << connect_RRH_36 << " usuários" << std::endl;
	std::cout <<"RRH 37: " << connect_RRH_37 << " usuários" << std::endl;
	std::cout <<"RRH 38: " << connect_RRH_38 << " usuários" << std::endl;
	std::cout <<"RRH 39: " << connect_RRH_39 << " usuários" << std::endl;
	std::cout <<"RRH 40: " << connect_RRH_40 << " usuários" << std::endl;
	std::cout <<"RRH 41: " << connect_RRH_41 << " usuários" << std::endl;
	std::cout <<"RRH 42: " << connect_RRH_42 << " usuários" << std::endl;
	std::cout <<"RRH 43: " << connect_RRH_43 << " usuários" << std::endl;
	std::cout <<"RRH 44: " << connect_RRH_44 << " usuários" << std::endl;
	std::cout <<"RRH 45: " << connect_RRH_45 << " usuários" << std::endl;
	std::cout <<"RRH 46: " << connect_RRH_46 << " usuários" << std::endl;
	std::cout <<"RRH 47: " << connect_RRH_47 << " usuários" << std::endl;
	std::cout <<"RRH 48: " << connect_RRH_48 << " usuários" << std::endl;
	std::cout <<"RRH 49: " << connect_RRH_49 << " usuários" << std::endl;
	std::cout <<"RRH 50: " << connect_RRH_50 << " usuários" << std::endl;
	std::cout <<"RRH 51: " << connect_RRH_51 << " usuários" << std::endl;
	std::cout <<"RRH 52: " << connect_RRH_52 << " usuários" << std::endl;
	std::cout <<"RRH 53: " << connect_RRH_53 << " usuários" << std::endl;
	std::cout <<"RRH 54: " << connect_RRH_54 << " usuários" << std::endl;
	std::cout <<"RRH 55: " << connect_RRH_55 << " usuários" << std::endl;
	std::cout <<"RRH 56: " << connect_RRH_56 << " usuários" << std::endl;
	std::cout <<"RRH 57: " << connect_RRH_57 << " usuários" << std::endl;
	std::cout <<"RRH 58: " << connect_RRH_58 << " usuários" << std::endl;
	std::cout <<"RRH 59: " << connect_RRH_59 << " usuários" << std::endl;
	std::cout <<"RRH 60: " << connect_RRH_60 << " usuários" << std::endl;
	std::cout <<"RRH 61: " << connect_RRH_61 << " usuários" << std::endl;
	std::cout <<"RRH 62: " << connect_RRH_62 << " usuários" << std::endl;
	std::cout <<"RRH 63: " << connect_RRH_63 << " usuários" << std::endl;
	std::cout <<"RRH 64: " << connect_RRH_64 << " usuários" << std::endl;

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;

	FIM ALLOCATION 24.0

	INICIO UPDATE 24.0

	switch (cellid)
		{
			case 1:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 2:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 3:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 4:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 5:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 6:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 7:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 8:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 9:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 10:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 11:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 12:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 13:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 14:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 15:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 16:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 17:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 18:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 19:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 20:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 21:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 22:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 23:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 24:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 25:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 26:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 27:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 28:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 29:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 30:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 31:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 32:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 33:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 34:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 35:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 36:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 37:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 38:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 39:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 40:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 41:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 42:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 43:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 44:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 45:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 46:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 47:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 48:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 49:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 50:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 51:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 52:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 53:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 54:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 55:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			case 56:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 57:
				mymap3[m_mymap[imsi]]= 3;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 3 (Handover)"<<std::endl;
				break;
			case 58:
				mymap3[m_mymap[imsi]]= 5;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 5 (Handover)"<<std::endl;
				break;
			case 59:
				mymap3[m_mymap[imsi]]= 4;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 4 (Handover)"<<std::endl;
				break;
			case 60:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 61:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 62:
				mymap3[m_mymap[imsi]]= 2;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 2 (Handover)"<<std::endl;
				break;
			case 63:
				mymap3[m_mymap[imsi]]= 1;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 1 (Handover)"<<std::endl;
				break;
			case 64:
				mymap3[m_mymap[imsi]]= 6;
				//std::cout<<"ip: "<<m_mymap[imsi]<<" associado à BBU: 6 (Handover)"<<std::endl;
				break;
			default:
				mymap3[m_mymap[imsi]]= 7;
				std::cout<<"ip: "<<m_mymap[imsi]<<" não associado"<<std::endl;
				break;
		}
	FIM UPDATE 24.0

FIM HORA 24.0
