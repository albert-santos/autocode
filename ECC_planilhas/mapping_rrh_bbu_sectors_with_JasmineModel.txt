
INICIO HORA 1
	uint32_t connect_RRH_1 = 0;
	uint32_t connect_RRH_2 = 0;
	uint32_t connect_RRH_3 = 0;
	uint32_t connect_RRH_4 = 0;
	uint32_t connect_RRH_5 = 0;
	uint32_t connect_RRH_6 = 0;
	uint32_t connect_RRH_7 = 0;
	uint32_t connect_RRH_8 = 0;
	uint32_t connect_RRH_9 = 0;
	uint32_t connect_RRH_10 = 0;
	uint32_t connect_RRH_11 = 0;
	uint32_t connect_RRH_12 = 0;
	uint32_t connect_RRH_13 = 0;
	uint32_t connect_RRH_14 = 0;
	uint32_t connect_RRH_15 = 0;
	uint32_t connect_RRH_16 = 0;
	uint32_t connect_RRH_17 = 0;
	uint32_t connect_RRH_18 = 0;
	uint32_t connect_RRH_19 = 0;
	uint32_t connect_RRH_20 = 0;
	uint32_t connect_RRH_21 = 0;
	uint32_t connect_RRH_22 = 0;
	uint32_t connect_RRH_23 = 0;
	uint32_t connect_RRH_24 = 0;
	uint32_t connect_RRH_25 = 0;

	uint32_t connect_bbu_1 = 0;
	uint32_t connect_bbu_2 = 0;
	uint32_t connect_bbu_3 = 0;
	uint32_t connect_bbu_4 = 0;
	uint32_t connect_bbu_5 = 0;
	uint32_t connect_bbu_6 = 0;

	for (std::map<uint64_t, uint64_t >::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it) 
	{

		//Associando cada antena a uma BBU de acordo com a alocação teste

		switch (it->second)
		{
			case 1:
				connect_RRH_1++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 2:
				connect_RRH_2++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 3:
				connect_RRH_3++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 4:
				connect_RRH_4++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 5:
				connect_RRH_5++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 6:
				connect_RRH_6++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 7:
				connect_RRH_7++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 8:
				connect_RRH_8++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 9:
				connect_RRH_9++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 10:
				connect_RRH_10++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 11:
				connect_RRH_11++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 12:
				connect_RRH_12++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 13:
				connect_RRH_13++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 14:
				connect_RRH_14++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 15:
				connect_RRH_15++;
				mymap3[m_mymap[it->first]]= 6;
				connect_bbu_6++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 6"<<std::endl;
				break;
			case 16:
				connect_RRH_16++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 17:
				connect_RRH_17++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 18:
				connect_RRH_18++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 19:
				connect_RRH_19++;
				mymap3[m_mymap[it->first]]= 1;
				connect_bbu_1++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 1"<<std::endl;
				break;
			case 20:
				connect_RRH_20++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 21:
				connect_RRH_21++;
				mymap3[m_mymap[it->first]]= 5;
				connect_bbu_5++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 5"<<std::endl;
				break;
			case 22:
				connect_RRH_22++;
				mymap3[m_mymap[it->first]]= 3;
				connect_bbu_3++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 3"<<std::endl;
				break;
			case 23:
				connect_RRH_23++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			case 24:
				connect_RRH_24++;
				mymap3[m_mymap[it->first]]= 2;
				connect_bbu_2++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 2"<<std::endl;
				break;
			case 25:
				connect_RRH_25++;
				mymap3[m_mymap[it->first]]= 4;
				connect_bbu_4++;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" associado à BBU: 4"<<std::endl;
				break;
			default:
				mymap3[m_mymap[it->first]]= 7;
				//std::cout<<"ip: "<<m_mymap[it->first]<<" não associado"<<std::endl;
				break;
		}
	}

	std::cout <<" MAPA 1: IMSI X IP" << std::endl;
	for (std::map<uint64_t, Ipv4Address>::iterator it=m_mymap.begin(); it!=m_mymap.end(); ++it)
		std::cout <<"imsi: "<< it->first << " ip address: " << it->second << std::endl;

	std::cout <<" MAPA 2: IMSI X RRH_ID"<< std::endl;
	for (std::map<uint64_t, uint64_t>::iterator it=m_mymap2.begin(); it!=m_mymap2.end(); ++it)
		std::cout <<"imsi: "<< it->first << " connected to cellid: " << it->second << std::endl; 

	std::cout <<" MAPA 3: IP X BBU"<< std::endl;
	for (std::map<Ipv4Address, uint64_t >::iterator it=mymap3.begin(); it!=mymap3.end(); ++it)
		std::cout <<"ip address: "<< it->first << " bbu: " << it->second << std::endl; 

	std::cout << " " << std::endl;
	std::cout <<" Qtd de Usuários por RRH"<< std::endl;
	std::cout <<"RRH 1: " << connect_RRH_1 << " usuários << std::endl";
	std::cout <<"RRH 2: " << connect_RRH_2 << " usuários << std::endl";
	std::cout <<"RRH 3: " << connect_RRH_3 << " usuários << std::endl";
	std::cout <<"RRH 4: " << connect_RRH_4 << " usuários << std::endl";
	std::cout <<"RRH 5: " << connect_RRH_5 << " usuários << std::endl";
	std::cout <<"RRH 6: " << connect_RRH_6 << " usuários << std::endl";
	std::cout <<"RRH 7: " << connect_RRH_7 << " usuários << std::endl";
	std::cout <<"RRH 8: " << connect_RRH_8 << " usuários << std::endl";
	std::cout <<"RRH 9: " << connect_RRH_9 << " usuários << std::endl";
	std::cout <<"RRH 10: " << connect_RRH_10 << " usuários << std::endl";
	std::cout <<"RRH 11: " << connect_RRH_11 << " usuários << std::endl";
	std::cout <<"RRH 12: " << connect_RRH_12 << " usuários << std::endl";
	std::cout <<"RRH 13: " << connect_RRH_13 << " usuários << std::endl";
	std::cout <<"RRH 14: " << connect_RRH_14 << " usuários << std::endl";
	std::cout <<"RRH 15: " << connect_RRH_15 << " usuários << std::endl";
	std::cout <<"RRH 16: " << connect_RRH_16 << " usuários << std::endl";
	std::cout <<"RRH 17: " << connect_RRH_17 << " usuários << std::endl";
	std::cout <<"RRH 18: " << connect_RRH_18 << " usuários << std::endl";
	std::cout <<"RRH 19: " << connect_RRH_19 << " usuários << std::endl";
	std::cout <<"RRH 20: " << connect_RRH_20 << " usuários << std::endl";
	std::cout <<"RRH 21: " << connect_RRH_21 << " usuários << std::endl";
	std::cout <<"RRH 22: " << connect_RRH_22 << " usuários << std::endl";
	std::cout <<"RRH 23: " << connect_RRH_23 << " usuários << std::endl";
	std::cout <<"RRH 24: " << connect_RRH_24 << " usuários << std::endl";
	std::cout <<"RRH 25: " << connect_RRH_25 << " usuários << std::endl";

	std::cout << " " << std::endl;
	std::cout <<"BBU 1: " << connect_bbu_1 << " usuários" << std::endl;
	std::cout <<"BBU 2: " << connect_bbu_2 << " usuários" << std::endl;
	std::cout <<"BBU 3: " << connect_bbu_3 << " usuários" << std::endl;
	std::cout <<"BBU 4: " << connect_bbu_4 << " usuários" << std::endl;
	std::cout <<"BBU 5: " << connect_bbu_5 << " usuários" << std::endl;
	std::cout <<"BBU 6: " << connect_bbu_6 << " usuários" << std::endl;
